# Multi-stage build for integrated Flask + React app
FROM node:18-alpine AS frontend-builder

# Set working directory
WORKDIR /app/templates

# Copy frontend files
COPY frontend/package*.json ./
COPY frontend/ ./

# Install dependencies and build
RUN npm ci --only=production
RUN npm run build

# Python stage
FROM python:3.11-slim

# Set environment variables
ENV PYTHONDONTWRITEBYTECODE=1
ENV PYTHONUNBUFFERED=1
ENV FLASK_ENV=production

# Set work directory
WORKDIR /app

# Install system dependencies
RUN apt-get update \
    && apt-get install -y --no-install-recommends \
        gcc \
        g++ \
        libpq-dev \
    && rm -rf /var/lib/apt/lists/*

# Install Python dependencies
COPY requirements.txt .
RUN pip install --no-cache-dir -r requirements.txt

# Copy application code
COPY src/ ./src/
COPY data/ ./data/
COPY pipeline.py .
COPY run_integrated_app.py .

# Copy built frontend from previous stage
COPY --from=frontend-builder /app/templates/dist ./templates/dist

# Create necessary directories
RUN mkdir -p logs

# Expose port
EXPOSE 5000

# Health check
HEALTHCHECK --interval=30s --timeout=30s --start-period=5s --retries=3 \
    CMD curl -f http://localhost:5000/api/health || exit 1

# Run the application
CMD ["python", "src/api/app.py"] 